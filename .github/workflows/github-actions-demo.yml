name: Deploy EC2 Stack
on: [push]

jobs:
  Deploy-EC2-Stack:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      # Enable debug logging
      - name: Enable Debug Logging
        run: echo "AWS_SDK_LOAD_CONFIG=1" >> $GITHUB_ENV

      # Authenticate using OIDC
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::849059301510:role/github-action-deploy
          aws-region: eu-north-1

      # Log AWS identity to verify OIDC authentication
      - name: Verify AWS Identity
        run: aws sts get-caller-identity

      # Check out repository code
      - name: Check out repository code
        uses: actions/checkout@v4

      # Print current directory
      - name: Print current directory files
        run: ls

      # Deploy the CloudFormation stack
      - name: Deploy CloudFormation Stack
        run: |
          aws cloudformation deploy \
            --template-file ./ec2.yml \
            --stack-name EC2Stack \
            --capabilities CAPABILITY_NAMED_IAM

      # Retrieve the public IP of the EC2 instance
      - name: Get EC2 Instance ID
        id: get-ec2-id
        run: |
          INSTANCE_ID=$(aws cloudformation describe-stack-resources \
          --stack-name EC2Stack \
          --query "StackResources[?LogicalResourceId=='EC2Instance'].PhysicalResourceId" \
          --output text)
          echo "INSTANCE_ID=$INSTANCE_ID" >> $GITHUB_ENV

      # Wait for EC2 instance to be ready
      - name: Wait for EC2 Instance
        run:
          sleep 60

          # Deploy code to EC2 instance using SSM
      - name: Deploy Code to EC2 via SSM
        run: |
          aws ssm send-command \
          --instance-ids $INSTANCE_ID \
          --document-name "AWS-RunShellScript" \
          --comment "Deploy application" \
          --parameters commands=["#!/bin/bash",
            "echo 'Starting deployment script...'",
            "git clone https://github.com/agrajy10/ci-cd-frontend.git || exit 1",
            "cd ci-cd-frontend || exit 1",
            "npm install || exit 1",
            "npm run build || exit 1",
            "sudo chown -R www-data:www-data /home/ubuntu/ci-cd-frontend/dist",
            "sudo find /home/ubuntu/ci-cd-frontend/dist -type d -exec chmod 755 {} \\;",
            "sudo find /home/ubuntu/ci-cd-frontend/dist -type f -exec chmod 644 {} \\;",
            "sudo bash -c 'cat > /etc/nginx/sites-available/default <<EOF",
            "server {",
            "    listen 80;",
            "    server_name _;",
            "    root /home/ubuntu/ci-cd-frontend/dist;",
            "    index index.html;",
            "    location / {",
            "        try_files \\$uri /index.html;",
            "    }",
            "}",
            "EOF'",
            "sudo systemctl restart nginx || exit 1",
            "echo 'Deployment completed successfully.'"] \
          --region eu-north-1
